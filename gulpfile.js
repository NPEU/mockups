const gulp     = require('gulp');

/*------------------------------------------------------------------------------------------------*\
    IMAGES    
\*------------------------------------------------------------------------------------------------*/
var img_src  = './_images/';
var img_dest = './img/';

const svg2png  = require('gulp-svg2png');
const imagemin = require('gulp-imagemin');
const svgmin   = require('gulp-svgmin');

// Here we're converting SVG to PNG as a fallback for older browsers.
// Note we're placing the files in the same directry as the SVG files, not the output folder as 
// we're not done processing them yet.
// Also note that we're doing this BEFORE we optimise the SVG. The SVG optimiation (below) removes
// the width and height attributes which causes problems for the PNG generation.
gulp.task('svg2png', () =>
    gulp.src(img_src + '**/*.svg')
        .pipe(svg2png())
        .pipe(gulp.dest(function (file) {
            return file.base;
        }))
);

// Next we're optimising all bitmap images, including the ones generated by the previoous step, and
// putting them in the output folder.
gulp.task('imagemin', () =>
	gulp.src(img_src + '**/*.{png,jpg,gif}')
		.pipe(imagemin())
		.pipe(gulp.dest(img_dest))
);

// Finally, we're optimising the SVG's and putting them in the output folder.
gulp.task('svgmin', () =>
    gulp.src(img_src + '**/*.svg')
        .pipe(svgmin({
            plugins: [{
                removeDimensions: true
            }]
        }))
        .pipe(gulp.dest(img_dest))
);

// This combined task makes it convenient to run all the steps togther.
gulp.task('img', ['svg2png', 'imagemin', 'svgmin'], () =>
    console.log('Processing images. See gulpfile.js for details.')
)