// This file acts as a bridge or converter between the theme values and the soeecifc patterns.
// Note that all patterns that need to be themeable need to follow the same 'interface'.
// See 'panel' pattern for initial example.

// NOTE: the way this works is that patterns are only themed if the theme class is applied to the
// same element as the pattern class. This is intentional as it's possible for a collection of
// things to need to utilize several themes (think of news items belonging to different projects)
// The only things that are (and should be) scoped to children of themed classes via the cascade
// rather than explicitly are the overrides to StartCSS, at the bottom.

$theme-namespace: t- !default;

/*
Note - this won't work until SASS supports dynamic calling of mixins. It's close, but hasn't been
merged yet. Hoping that will be done soon so I can change this.

// List all the includes that should be called.
// Note that they're defined in the relevent pattern files, so it isn't ideal to list them here,
// but I don't know of another way of doing this yet.
// One idea could be that each pattern that needs to be theme-able adds it's own name to this list,
// (registers itself). This may work, but may come with it's own set of problems. Investigate.
$patterns: (
    bands-theme,
    page-header-theme,
    panel-theme,
    panel-theme--dark,
    randomise-cta-theme
);
*/

@each $name, $theme in $themes {

    // Set default background color:
	$background-color: map-get($theme, primary-color);
	@if map-has-key($theme, background-color) {
		$background-color: map-get($theme, background-color);
	}

    // Set default band color:
	$band-color: map-get($theme, primary-color);
	@if map-has-key($theme, band-color) {
		$band-color: map-get($theme, band-color);
	}

    // Set default border color:
	/*$border-color: map-get($theme, primary-color);
	@if map-has-key($theme, border-color) {
		$border-color: map-get($theme, border-color);
	}*/

    // Set default page-header color:
	$page-header-color: map-get($theme, primary-color);
	@if map-has-key($theme, page-header-color) {
		$page-header-color: map-get($theme, page-header-color);
	}

	// Set default text color:
	$text-color: $fallback--base-text-color;
	@if map-has-key($theme, text-color) {
		$text-color: map-get($theme, text-color);
	}

    /* - Waiting for SASS to support. Currently pseudo code.
    @each $pattern in $patterns {
        @include $pattern (
            (
                name  : #{$name},
                theme : $theme
            )
        );
    }
    */

    @include bands-theme($name, $theme);
    @include page-header-theme($name, $theme);
	@include panel-theme($name, $theme);
	@include panel-theme--dark($name, $theme);
    @include randomise-cta-theme($name, $theme);


    // Override StartCSS values.
    // Note this almost certainly isn't the best place for this but will do for now.

    .#{$theme-namespace} button {
        border-color: $border-color;

        color: $color;
        background-color: $bg-color;
    }
}
