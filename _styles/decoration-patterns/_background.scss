//$backgrounds--base-color		 : #eee !default;
$backgrounds-namespace: d- !default;
$theme-namespace: t- !default;

$backgrounds--background-color : $fallback--base-ui-color !default;

$theme-only: false !default;

@mixin background-theme ($name: "", $theme: ()) {
	// Set up theme name:
	$theme-class: "";
	@if $name != "" {
		$theme-class: unquote('.')#{$theme-namespace}#{$name};
	}
	//@debug $theme-class;

	.#{$backgrounds-namespace}background#{$theme-class} {
		background-color: map-get($theme, background-color);
	}
    
    .#{$backgrounds-namespace}background--dark#{$theme-class} {
		background-color: darken(map-get($theme, background-color), 10%);
	}
    
    
    .#{$backgrounds-namespace}background--very-dark#{$theme-class} {
		background-color: darken(map-get($theme, background-color), 20%);
	}
    
    .#{$backgrounds-namespace}background--sloped#{$theme-class} {
        background: -moz-linear-gradient(45deg, darken(map-get($theme, background-color), 5%) 0%, darken(map-get($theme, background-color), 4%) 50%, darken(map-get($theme, background-color), 2%) 50%,darken(map-get($theme, background-color), 3%) 100%);
        background: -webkit-linear-gradient(45deg, darken(map-get($theme, background-color), 5%) 0%,darken(map-get($theme, background-color), 4%) 50%,darken(map-get($theme, background-color), 2%) 50%,darken(map-get($theme, background-color), 3%) 100%);
        background: linear-gradient(45deg, darken(map-get($theme, background-color), 5%) 0%,darken(map-get($theme, background-color), 4%) 50%,darken(map-get($theme, background-color), 2%) 50%,darken(map-get($theme, background-color), 3%) 100%);
    }
}

// We don't need this if we're only themeing the pattern:
@if $theme-only == false {

    @include background-theme(
        "",
        (
            background-color : $backgrounds--background-color
        ));
}